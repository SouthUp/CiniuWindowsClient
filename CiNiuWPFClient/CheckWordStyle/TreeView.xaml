<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:CheckWordControl;assembly=CheckWordControl">
    <control:ConverterLoginMarginLeft x:Key="ConverterLoginMarginLeft" />
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

    <Style x:Key="ArrowExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="270"></RotateTransform>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>

                        <Path Width="10" Height="10" Stroke="#444444" StrokeThickness="1" Fill="#444444" Margin="0,0,0,0">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0" IsClosed="True">
                                        <LineSegment Point="10,0"></LineSegment>
                                        <LineSegment Point="5,10"></LineSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="360"></RotateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#444444"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="tvgrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Margin="0,1,0,1" x:Name="BdBack" Grid.ColumnSpan="3"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Column="0" Grid.ColumnSpan="3" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="20,0,0,0">
                                <ContentPresenter x:Name="PART_Header"
                                                  VerticalAlignment="Center" ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ToggleButton x:Name="Expander" HorizontalAlignment="Right" ClickMode="Press" VerticalAlignment="Center" 
                                              Margin="20,0,0,0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource ArrowExpandCollapseToggleStyle}"/>
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="Bd" >
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack">
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="BdBack" Value="#0aa5d9" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False" >
                            <Setter Property="IsExpanded" Value="False"/>
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItem1" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#444444"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="tvgrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Margin="0,1,0,1" x:Name="BdBack" Grid.ColumnSpan="3"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Column="0" Grid.ColumnSpan="3" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="20,0,0,0">
                                <ContentPresenter x:Name="PART_Header"
                                                  VerticalAlignment="Center" ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ToggleButton x:Name="Expander" HorizontalAlignment="Right" ClickMode="Press" VerticalAlignment="Center" 
                                              Margin="20,0,0,0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource ArrowExpandCollapseToggleStyle}"/>
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="Bd" >
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack">
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="BdBack" Value="#0aa5d9" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Background" Value="#0aa5d9" TargetName="BdBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False" >
                            <Setter Property="IsExpanded" Value="False"/>
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="grid" Background="{x:Null}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="stackPanel" Orientation="Horizontal" Grid.Row="0"
                                            Margin="{Binding Converter={StaticResource ConverterLoginMarginLeft}, 
                                            RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeViewItem}}}">
                            <!--<CheckBox Focusable="False" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />-->
                            <ToggleButton x:Name="Expander" Margin="0,5,5,0" Cursor="Hand"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      Margin="5,5,0,0" TextElement.FontSize="18" 
                                                      TextElement.Foreground="#444444" TextElement.FontFamily="Microsoft YaHei"/>
                        </StackPanel>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="PART_Header" Value="#14a0ed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>